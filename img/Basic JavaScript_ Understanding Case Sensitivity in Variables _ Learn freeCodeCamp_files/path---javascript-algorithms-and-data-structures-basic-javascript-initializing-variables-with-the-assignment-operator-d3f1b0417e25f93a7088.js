webpackJsonp([0xcedc6350b97f],{3874:function(e,a){e.exports={data:{challengeNode:{title:"Initializing Variables with the Assignment Operator",description:["It is common to <dfn>initialize</dfn> a variable to an initial value in the same line as it is declared.","<code>var myVar = 0;</code>","Creates a new variable called <code>myVar</code> and assigns it an initial value of <code>0</code>.","<hr>","Define a variable <code>a</code> with <code>var</code> and initialize it to a value of <code>9</code>."],challengeType:1,videoUrl:null,fields:{slug:"/javascript-algorithms-and-data-structures/basic-javascript/initializing-variables-with-the-assignment-operator",blockName:"Basic JavaScript",tests:[{text:"Initialize <code>a</code> to a value of <code>9</code>",testString:"assert(/var\\s+a\\s*=\\s*9\\s*/.test(code), 'Initialize <code>a</code> to a value of <code>9</code>');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"// Example\nvar ourVar = 19;\n\n// Only change code below this line\n",head:"",tail:"if(typeof a !== 'undefined') {(function(a){return \"a = \" + a;})(a);} else { (function() {return 'a is undefined';})(); }"},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/basic-javascript/understanding-uninitialized-variables",id:"56533eb9ac21ba0edf2244a9"},slug:"/javascript-algorithms-and-data-structures/basic-javascript/initializing-variables-with-the-assignment-operator"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-basic-javascript-initializing-variables-with-the-assignment-operator-d3f1b0417e25f93a7088.js.map